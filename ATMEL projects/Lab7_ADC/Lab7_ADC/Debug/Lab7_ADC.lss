
Lab7_ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000047c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000004f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000520  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a39  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000940  00000000  00000000  00000fe9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000359  00000000  00000000  00001929  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  00001c84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004de  00000000  00000000  00001d64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000114  00000000  00000000  00002242  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002356  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 ac 00 	jmp	0x158	; 0x158 <__vector_14>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__vector_21>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a2 30       	cpi	r26, 0x02	; 2
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 03 01 	call	0x206	; 0x206 <main>
  d4:	0c 94 3c 02 	jmp	0x478	; 0x478 <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <init_IO>:
** general pre scale for program to run smooth at 256 system clock **
*/

void init_IO()
{
	DDRD |= (1 << 3);//oc2b value as outpu from timer 2
  dc:	8a b1       	in	r24, 0x0a	; 10
  de:	88 60       	ori	r24, 0x08	; 8
  e0:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1 << 5); //OUTPUT LED
  e2:	84 b1       	in	r24, 0x04	; 4
  e4:	80 62       	ori	r24, 0x20	; 32
  e6:	84 b9       	out	0x04, r24	; 4
	DDRC &= ~(1 << 0);//INPUT FROM POTENTIOMETER
  e8:	87 b1       	in	r24, 0x07	; 7
  ea:	8e 7f       	andi	r24, 0xFE	; 254
  ec:	87 b9       	out	0x07, r24	; 7
	PORTB |= (1 << 5); //DEFUALT On
  ee:	85 b1       	in	r24, 0x05	; 5
  f0:	80 62       	ori	r24, 0x20	; 32
  f2:	85 b9       	out	0x05, r24	; 5
  f4:	08 95       	ret

000000f6 <init_AD>:
}

void init_AD()
{
	ADMUX |= (1 << REFS0);//channel 0 & Vcc ref 5V
  f6:	ec e7       	ldi	r30, 0x7C	; 124
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	80 64       	ori	r24, 0x40	; 64
  fe:	80 83       	st	Z, r24
	ADMUX &= ~(1 << MUX0 | 1 << MUX1 | 1 << MUX2 | 1 << MUX3);//DOUBLE CHECK
 100:	80 81       	ld	r24, Z
 102:	80 7f       	andi	r24, 0xF0	; 240
 104:	80 83       	st	Z, r24
		ENABLE CONVERISONS
		ENABLE AUTO TRIGGER
		ENABLE INTERRUPTS
		PRESCALE 128
	*/
	ADCSRA |= (1 << ADEN) | (1 << ADATE) | (1 << ADIE) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);
 106:	ea e7       	ldi	r30, 0x7A	; 122
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	8f 6a       	ori	r24, 0xAF	; 175
 10e:	80 83       	st	Z, r24
	ADCSRB |= (1 << ADTS1) | (1 << ADTS0); //set when compare match of timer0A to activate analog comparator
 110:	eb e7       	ldi	r30, 0x7B	; 123
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	80 81       	ld	r24, Z
 116:	83 60       	ori	r24, 0x03	; 3
 118:	80 83       	st	Z, r24
 11a:	08 95       	ret

0000011c <init_Timer0>:
{
	/*
		FOR THE AD CONVERSION
	*/
	//set the first timer to have a frequency of X + 1 ms = 5ms of just OCR0A
	TCCR0A |= (1 << WGM01);// | (1 << WGM00); // Set the Timer Mode to ctc
 11c:	84 b5       	in	r24, 0x24	; 36
 11e:	82 60       	ori	r24, 0x02	; 2
 120:	84 bd       	out	0x24, r24	; 36
	// When OC0A flag hit then set flag when at BOTTOM clear bit

	// set pre-scaler to 1024 and start the timer to have the max be 5ms
	OCR0A = 77;// one cycle less than ~5ms
 122:	8d e4       	ldi	r24, 0x4D	; 77
 124:	87 bd       	out	0x27, r24	; 39
	TCCR0B |= (1 << CS02) | (1 << CS00);
 126:	85 b5       	in	r24, 0x25	; 37
 128:	85 60       	ori	r24, 0x05	; 5
 12a:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1 << 1); //activate interrupts when OC0A flag enabled
 12c:	ee e6       	ldi	r30, 0x6E	; 110
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	82 60       	ori	r24, 0x02	; 2
 134:	80 83       	st	Z, r24
 136:	08 95       	ret

00000138 <init_Timer2>:
void init_Timer2(void)
{
	/*	FOR THE LED	*/
	//set the second timer to have a pwm of (Z + 1) * 100 Hz = 800Hz
	//1/800Hz = 0.00125 s => 1.25 ms
	TCCR2A |= (1 << WGM21) | (1 << WGM20) | (1 << COM2B1); // Set the Timer Mode to fpwm
 138:	e0 eb       	ldi	r30, 0xB0	; 176
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	83 62       	ori	r24, 0x23	; 35
 140:	80 83       	st	Z, r24
	// When OC0B flag hit then CLR flag when at BOTTOM SET bit

	// set pre-scaler to 256 and start the timer to have the max be ~5ms
	OCR2A = 77;// one cycle less than ~1.25ms
 142:	8d e4       	ldi	r24, 0x4D	; 77
 144:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	OCR2B = 77;
 148:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
	TCCR2B |= (1 << WGM22) | (1 << CS22) | (1 << CS21);
 14c:	e1 eb       	ldi	r30, 0xB1	; 177
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	80 81       	ld	r24, Z
 152:	8e 60       	ori	r24, 0x0E	; 14
 154:	80 83       	st	Z, r24
 156:	08 95       	ret

00000158 <__vector_14>:
}

ISR(TIMER0_COMPA_vect)
{	
 158:	1f 92       	push	r1
 15a:	0f 92       	push	r0
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	0f 92       	push	r0
 160:	11 24       	eor	r1, r1
}
 162:	0f 90       	pop	r0
 164:	0f be       	out	0x3f, r0	; 63
 166:	0f 90       	pop	r0
 168:	1f 90       	pop	r1
 16a:	18 95       	reti

0000016c <__vector_21>:

ISR(ADC_vect)
{
 16c:	1f 92       	push	r1
 16e:	0f 92       	push	r0
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	0f 92       	push	r0
 174:	11 24       	eor	r1, r1
 176:	2f 93       	push	r18
 178:	3f 93       	push	r19
 17a:	4f 93       	push	r20
 17c:	5f 93       	push	r21
 17e:	6f 93       	push	r22
 180:	7f 93       	push	r23
 182:	8f 93       	push	r24
 184:	9f 93       	push	r25
 186:	af 93       	push	r26
 188:	bf 93       	push	r27
 18a:	cf 93       	push	r28
 18c:	df 93       	push	r29
 18e:	ef 93       	push	r30
 190:	ff 93       	push	r31
	readADC_conversion = ADC;
 192:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 196:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 19a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 19e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	OCR2B = 0;
 1a2:	c4 eb       	ldi	r28, 0xB4	; 180
 1a4:	d0 e0       	ldi	r29, 0x00	; 0
 1a6:	18 82       	st	Y, r1
	OCR2B = readADC_conversion/13.28;
 1a8:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ac:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	0e 94 ae 01 	call	0x35c	; 0x35c <__floatunsisf>
 1b8:	21 ee       	ldi	r18, 0xE1	; 225
 1ba:	3a e7       	ldi	r19, 0x7A	; 122
 1bc:	44 e5       	ldi	r20, 0x54	; 84
 1be:	51 e4       	ldi	r21, 0x41	; 65
 1c0:	0e 94 0d 01 	call	0x21a	; 0x21a <__divsf3>
 1c4:	0e 94 7f 01 	call	0x2fe	; 0x2fe <__fixunssfsi>
 1c8:	68 83       	st	Y, r22
	if (OCR2B > 77){
 1ca:	88 81       	ld	r24, Y
 1cc:	8e 34       	cpi	r24, 0x4E	; 78
 1ce:	18 f0       	brcs	.+6      	; 0x1d6 <__vector_21+0x6a>
		OCR2B = 77;
 1d0:	8d e4       	ldi	r24, 0x4D	; 77
 1d2:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
	}
	if(OCR2B < 0)//in case off invalid value 
 1d6:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
	{
		DDRD &= (1<<3);
	}
	else
	{
		DDRD |= (1<<3);
 1da:	8a b1       	in	r24, 0x0a	; 10
 1dc:	88 60       	ori	r24, 0x08	; 8
 1de:	8a b9       	out	0x0a, r24	; 10
	}
}
 1e0:	ff 91       	pop	r31
 1e2:	ef 91       	pop	r30
 1e4:	df 91       	pop	r29
 1e6:	cf 91       	pop	r28
 1e8:	bf 91       	pop	r27
 1ea:	af 91       	pop	r26
 1ec:	9f 91       	pop	r25
 1ee:	8f 91       	pop	r24
 1f0:	7f 91       	pop	r23
 1f2:	6f 91       	pop	r22
 1f4:	5f 91       	pop	r21
 1f6:	4f 91       	pop	r20
 1f8:	3f 91       	pop	r19
 1fa:	2f 91       	pop	r18
 1fc:	0f 90       	pop	r0
 1fe:	0f be       	out	0x3f, r0	; 63
 200:	0f 90       	pop	r0
 202:	1f 90       	pop	r1
 204:	18 95       	reti

00000206 <main>:

int main(void)
{
	sei();
 206:	78 94       	sei
	init_Timer0();
 208:	0e 94 8e 00 	call	0x11c	; 0x11c <init_Timer0>
	init_Timer2();
 20c:	0e 94 9c 00 	call	0x138	; 0x138 <init_Timer2>
	init_AD();
 210:	0e 94 7b 00 	call	0xf6	; 0xf6 <init_AD>
	init_IO();
 214:	0e 94 6e 00 	call	0xdc	; 0xdc <init_IO>
 218:	ff cf       	rjmp	.-2      	; 0x218 <main+0x12>

0000021a <__divsf3>:
 21a:	0e 94 21 01 	call	0x242	; 0x242 <__divsf3x>
 21e:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_round>
 222:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__fp_pscB>
 226:	58 f0       	brcs	.+22     	; 0x23e <__divsf3+0x24>
 228:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__fp_pscA>
 22c:	40 f0       	brcs	.+16     	; 0x23e <__divsf3+0x24>
 22e:	29 f4       	brne	.+10     	; 0x23a <__divsf3+0x20>
 230:	5f 3f       	cpi	r21, 0xFF	; 255
 232:	29 f0       	breq	.+10     	; 0x23e <__divsf3+0x24>
 234:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_inf>
 238:	51 11       	cpse	r21, r1
 23a:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_szero>
 23e:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__fp_nan>

00000242 <__divsf3x>:
 242:	0e 94 13 02 	call	0x426	; 0x426 <__fp_split3>
 246:	68 f3       	brcs	.-38     	; 0x222 <__divsf3+0x8>

00000248 <__divsf3_pse>:
 248:	99 23       	and	r25, r25
 24a:	b1 f3       	breq	.-20     	; 0x238 <__divsf3+0x1e>
 24c:	55 23       	and	r21, r21
 24e:	91 f3       	breq	.-28     	; 0x234 <__divsf3+0x1a>
 250:	95 1b       	sub	r25, r21
 252:	55 0b       	sbc	r21, r21
 254:	bb 27       	eor	r27, r27
 256:	aa 27       	eor	r26, r26
 258:	62 17       	cp	r22, r18
 25a:	73 07       	cpc	r23, r19
 25c:	84 07       	cpc	r24, r20
 25e:	38 f0       	brcs	.+14     	; 0x26e <__divsf3_pse+0x26>
 260:	9f 5f       	subi	r25, 0xFF	; 255
 262:	5f 4f       	sbci	r21, 0xFF	; 255
 264:	22 0f       	add	r18, r18
 266:	33 1f       	adc	r19, r19
 268:	44 1f       	adc	r20, r20
 26a:	aa 1f       	adc	r26, r26
 26c:	a9 f3       	breq	.-22     	; 0x258 <__divsf3_pse+0x10>
 26e:	35 d0       	rcall	.+106    	; 0x2da <__divsf3_pse+0x92>
 270:	0e 2e       	mov	r0, r30
 272:	3a f0       	brmi	.+14     	; 0x282 <__divsf3_pse+0x3a>
 274:	e0 e8       	ldi	r30, 0x80	; 128
 276:	32 d0       	rcall	.+100    	; 0x2dc <__divsf3_pse+0x94>
 278:	91 50       	subi	r25, 0x01	; 1
 27a:	50 40       	sbci	r21, 0x00	; 0
 27c:	e6 95       	lsr	r30
 27e:	00 1c       	adc	r0, r0
 280:	ca f7       	brpl	.-14     	; 0x274 <__divsf3_pse+0x2c>
 282:	2b d0       	rcall	.+86     	; 0x2da <__divsf3_pse+0x92>
 284:	fe 2f       	mov	r31, r30
 286:	29 d0       	rcall	.+82     	; 0x2da <__divsf3_pse+0x92>
 288:	66 0f       	add	r22, r22
 28a:	77 1f       	adc	r23, r23
 28c:	88 1f       	adc	r24, r24
 28e:	bb 1f       	adc	r27, r27
 290:	26 17       	cp	r18, r22
 292:	37 07       	cpc	r19, r23
 294:	48 07       	cpc	r20, r24
 296:	ab 07       	cpc	r26, r27
 298:	b0 e8       	ldi	r27, 0x80	; 128
 29a:	09 f0       	breq	.+2      	; 0x29e <__divsf3_pse+0x56>
 29c:	bb 0b       	sbc	r27, r27
 29e:	80 2d       	mov	r24, r0
 2a0:	bf 01       	movw	r22, r30
 2a2:	ff 27       	eor	r31, r31
 2a4:	93 58       	subi	r25, 0x83	; 131
 2a6:	5f 4f       	sbci	r21, 0xFF	; 255
 2a8:	3a f0       	brmi	.+14     	; 0x2b8 <__divsf3_pse+0x70>
 2aa:	9e 3f       	cpi	r25, 0xFE	; 254
 2ac:	51 05       	cpc	r21, r1
 2ae:	78 f0       	brcs	.+30     	; 0x2ce <__divsf3_pse+0x86>
 2b0:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_inf>
 2b4:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_szero>
 2b8:	5f 3f       	cpi	r21, 0xFF	; 255
 2ba:	e4 f3       	brlt	.-8      	; 0x2b4 <__divsf3_pse+0x6c>
 2bc:	98 3e       	cpi	r25, 0xE8	; 232
 2be:	d4 f3       	brlt	.-12     	; 0x2b4 <__divsf3_pse+0x6c>
 2c0:	86 95       	lsr	r24
 2c2:	77 95       	ror	r23
 2c4:	67 95       	ror	r22
 2c6:	b7 95       	ror	r27
 2c8:	f7 95       	ror	r31
 2ca:	9f 5f       	subi	r25, 0xFF	; 255
 2cc:	c9 f7       	brne	.-14     	; 0x2c0 <__divsf3_pse+0x78>
 2ce:	88 0f       	add	r24, r24
 2d0:	91 1d       	adc	r25, r1
 2d2:	96 95       	lsr	r25
 2d4:	87 95       	ror	r24
 2d6:	97 f9       	bld	r25, 7
 2d8:	08 95       	ret
 2da:	e1 e0       	ldi	r30, 0x01	; 1
 2dc:	66 0f       	add	r22, r22
 2de:	77 1f       	adc	r23, r23
 2e0:	88 1f       	adc	r24, r24
 2e2:	bb 1f       	adc	r27, r27
 2e4:	62 17       	cp	r22, r18
 2e6:	73 07       	cpc	r23, r19
 2e8:	84 07       	cpc	r24, r20
 2ea:	ba 07       	cpc	r27, r26
 2ec:	20 f0       	brcs	.+8      	; 0x2f6 <__divsf3_pse+0xae>
 2ee:	62 1b       	sub	r22, r18
 2f0:	73 0b       	sbc	r23, r19
 2f2:	84 0b       	sbc	r24, r20
 2f4:	ba 0b       	sbc	r27, r26
 2f6:	ee 1f       	adc	r30, r30
 2f8:	88 f7       	brcc	.-30     	; 0x2dc <__divsf3_pse+0x94>
 2fa:	e0 95       	com	r30
 2fc:	08 95       	ret

000002fe <__fixunssfsi>:
 2fe:	0e 94 1b 02 	call	0x436	; 0x436 <__fp_splitA>
 302:	88 f0       	brcs	.+34     	; 0x326 <__fixunssfsi+0x28>
 304:	9f 57       	subi	r25, 0x7F	; 127
 306:	98 f0       	brcs	.+38     	; 0x32e <__fixunssfsi+0x30>
 308:	b9 2f       	mov	r27, r25
 30a:	99 27       	eor	r25, r25
 30c:	b7 51       	subi	r27, 0x17	; 23
 30e:	b0 f0       	brcs	.+44     	; 0x33c <__fixunssfsi+0x3e>
 310:	e1 f0       	breq	.+56     	; 0x34a <__fixunssfsi+0x4c>
 312:	66 0f       	add	r22, r22
 314:	77 1f       	adc	r23, r23
 316:	88 1f       	adc	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	1a f0       	brmi	.+6      	; 0x322 <__fixunssfsi+0x24>
 31c:	ba 95       	dec	r27
 31e:	c9 f7       	brne	.-14     	; 0x312 <__fixunssfsi+0x14>
 320:	14 c0       	rjmp	.+40     	; 0x34a <__fixunssfsi+0x4c>
 322:	b1 30       	cpi	r27, 0x01	; 1
 324:	91 f0       	breq	.+36     	; 0x34a <__fixunssfsi+0x4c>
 326:	0e 94 35 02 	call	0x46a	; 0x46a <__fp_zero>
 32a:	b1 e0       	ldi	r27, 0x01	; 1
 32c:	08 95       	ret
 32e:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_zero>
 332:	67 2f       	mov	r22, r23
 334:	78 2f       	mov	r23, r24
 336:	88 27       	eor	r24, r24
 338:	b8 5f       	subi	r27, 0xF8	; 248
 33a:	39 f0       	breq	.+14     	; 0x34a <__fixunssfsi+0x4c>
 33c:	b9 3f       	cpi	r27, 0xF9	; 249
 33e:	cc f3       	brlt	.-14     	; 0x332 <__fixunssfsi+0x34>
 340:	86 95       	lsr	r24
 342:	77 95       	ror	r23
 344:	67 95       	ror	r22
 346:	b3 95       	inc	r27
 348:	d9 f7       	brne	.-10     	; 0x340 <__fixunssfsi+0x42>
 34a:	3e f4       	brtc	.+14     	; 0x35a <__fixunssfsi+0x5c>
 34c:	90 95       	com	r25
 34e:	80 95       	com	r24
 350:	70 95       	com	r23
 352:	61 95       	neg	r22
 354:	7f 4f       	sbci	r23, 0xFF	; 255
 356:	8f 4f       	sbci	r24, 0xFF	; 255
 358:	9f 4f       	sbci	r25, 0xFF	; 255
 35a:	08 95       	ret

0000035c <__floatunsisf>:
 35c:	e8 94       	clt
 35e:	09 c0       	rjmp	.+18     	; 0x372 <__floatsisf+0x12>

00000360 <__floatsisf>:
 360:	97 fb       	bst	r25, 7
 362:	3e f4       	brtc	.+14     	; 0x372 <__floatsisf+0x12>
 364:	90 95       	com	r25
 366:	80 95       	com	r24
 368:	70 95       	com	r23
 36a:	61 95       	neg	r22
 36c:	7f 4f       	sbci	r23, 0xFF	; 255
 36e:	8f 4f       	sbci	r24, 0xFF	; 255
 370:	9f 4f       	sbci	r25, 0xFF	; 255
 372:	99 23       	and	r25, r25
 374:	a9 f0       	breq	.+42     	; 0x3a0 <__floatsisf+0x40>
 376:	f9 2f       	mov	r31, r25
 378:	96 e9       	ldi	r25, 0x96	; 150
 37a:	bb 27       	eor	r27, r27
 37c:	93 95       	inc	r25
 37e:	f6 95       	lsr	r31
 380:	87 95       	ror	r24
 382:	77 95       	ror	r23
 384:	67 95       	ror	r22
 386:	b7 95       	ror	r27
 388:	f1 11       	cpse	r31, r1
 38a:	f8 cf       	rjmp	.-16     	; 0x37c <__floatsisf+0x1c>
 38c:	fa f4       	brpl	.+62     	; 0x3cc <__floatsisf+0x6c>
 38e:	bb 0f       	add	r27, r27
 390:	11 f4       	brne	.+4      	; 0x396 <__floatsisf+0x36>
 392:	60 ff       	sbrs	r22, 0
 394:	1b c0       	rjmp	.+54     	; 0x3cc <__floatsisf+0x6c>
 396:	6f 5f       	subi	r22, 0xFF	; 255
 398:	7f 4f       	sbci	r23, 0xFF	; 255
 39a:	8f 4f       	sbci	r24, 0xFF	; 255
 39c:	9f 4f       	sbci	r25, 0xFF	; 255
 39e:	16 c0       	rjmp	.+44     	; 0x3cc <__floatsisf+0x6c>
 3a0:	88 23       	and	r24, r24
 3a2:	11 f0       	breq	.+4      	; 0x3a8 <__floatsisf+0x48>
 3a4:	96 e9       	ldi	r25, 0x96	; 150
 3a6:	11 c0       	rjmp	.+34     	; 0x3ca <__floatsisf+0x6a>
 3a8:	77 23       	and	r23, r23
 3aa:	21 f0       	breq	.+8      	; 0x3b4 <__floatsisf+0x54>
 3ac:	9e e8       	ldi	r25, 0x8E	; 142
 3ae:	87 2f       	mov	r24, r23
 3b0:	76 2f       	mov	r23, r22
 3b2:	05 c0       	rjmp	.+10     	; 0x3be <__floatsisf+0x5e>
 3b4:	66 23       	and	r22, r22
 3b6:	71 f0       	breq	.+28     	; 0x3d4 <__floatsisf+0x74>
 3b8:	96 e8       	ldi	r25, 0x86	; 134
 3ba:	86 2f       	mov	r24, r22
 3bc:	70 e0       	ldi	r23, 0x00	; 0
 3be:	60 e0       	ldi	r22, 0x00	; 0
 3c0:	2a f0       	brmi	.+10     	; 0x3cc <__floatsisf+0x6c>
 3c2:	9a 95       	dec	r25
 3c4:	66 0f       	add	r22, r22
 3c6:	77 1f       	adc	r23, r23
 3c8:	88 1f       	adc	r24, r24
 3ca:	da f7       	brpl	.-10     	; 0x3c2 <__floatsisf+0x62>
 3cc:	88 0f       	add	r24, r24
 3ce:	96 95       	lsr	r25
 3d0:	87 95       	ror	r24
 3d2:	97 f9       	bld	r25, 7
 3d4:	08 95       	ret

000003d6 <__fp_inf>:
 3d6:	97 f9       	bld	r25, 7
 3d8:	9f 67       	ori	r25, 0x7F	; 127
 3da:	80 e8       	ldi	r24, 0x80	; 128
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	60 e0       	ldi	r22, 0x00	; 0
 3e0:	08 95       	ret

000003e2 <__fp_nan>:
 3e2:	9f ef       	ldi	r25, 0xFF	; 255
 3e4:	80 ec       	ldi	r24, 0xC0	; 192
 3e6:	08 95       	ret

000003e8 <__fp_pscA>:
 3e8:	00 24       	eor	r0, r0
 3ea:	0a 94       	dec	r0
 3ec:	16 16       	cp	r1, r22
 3ee:	17 06       	cpc	r1, r23
 3f0:	18 06       	cpc	r1, r24
 3f2:	09 06       	cpc	r0, r25
 3f4:	08 95       	ret

000003f6 <__fp_pscB>:
 3f6:	00 24       	eor	r0, r0
 3f8:	0a 94       	dec	r0
 3fa:	12 16       	cp	r1, r18
 3fc:	13 06       	cpc	r1, r19
 3fe:	14 06       	cpc	r1, r20
 400:	05 06       	cpc	r0, r21
 402:	08 95       	ret

00000404 <__fp_round>:
 404:	09 2e       	mov	r0, r25
 406:	03 94       	inc	r0
 408:	00 0c       	add	r0, r0
 40a:	11 f4       	brne	.+4      	; 0x410 <__fp_round+0xc>
 40c:	88 23       	and	r24, r24
 40e:	52 f0       	brmi	.+20     	; 0x424 <__fp_round+0x20>
 410:	bb 0f       	add	r27, r27
 412:	40 f4       	brcc	.+16     	; 0x424 <__fp_round+0x20>
 414:	bf 2b       	or	r27, r31
 416:	11 f4       	brne	.+4      	; 0x41c <__fp_round+0x18>
 418:	60 ff       	sbrs	r22, 0
 41a:	04 c0       	rjmp	.+8      	; 0x424 <__fp_round+0x20>
 41c:	6f 5f       	subi	r22, 0xFF	; 255
 41e:	7f 4f       	sbci	r23, 0xFF	; 255
 420:	8f 4f       	sbci	r24, 0xFF	; 255
 422:	9f 4f       	sbci	r25, 0xFF	; 255
 424:	08 95       	ret

00000426 <__fp_split3>:
 426:	57 fd       	sbrc	r21, 7
 428:	90 58       	subi	r25, 0x80	; 128
 42a:	44 0f       	add	r20, r20
 42c:	55 1f       	adc	r21, r21
 42e:	59 f0       	breq	.+22     	; 0x446 <__fp_splitA+0x10>
 430:	5f 3f       	cpi	r21, 0xFF	; 255
 432:	71 f0       	breq	.+28     	; 0x450 <__fp_splitA+0x1a>
 434:	47 95       	ror	r20

00000436 <__fp_splitA>:
 436:	88 0f       	add	r24, r24
 438:	97 fb       	bst	r25, 7
 43a:	99 1f       	adc	r25, r25
 43c:	61 f0       	breq	.+24     	; 0x456 <__fp_splitA+0x20>
 43e:	9f 3f       	cpi	r25, 0xFF	; 255
 440:	79 f0       	breq	.+30     	; 0x460 <__fp_splitA+0x2a>
 442:	87 95       	ror	r24
 444:	08 95       	ret
 446:	12 16       	cp	r1, r18
 448:	13 06       	cpc	r1, r19
 44a:	14 06       	cpc	r1, r20
 44c:	55 1f       	adc	r21, r21
 44e:	f2 cf       	rjmp	.-28     	; 0x434 <__fp_split3+0xe>
 450:	46 95       	lsr	r20
 452:	f1 df       	rcall	.-30     	; 0x436 <__fp_splitA>
 454:	08 c0       	rjmp	.+16     	; 0x466 <__fp_splitA+0x30>
 456:	16 16       	cp	r1, r22
 458:	17 06       	cpc	r1, r23
 45a:	18 06       	cpc	r1, r24
 45c:	99 1f       	adc	r25, r25
 45e:	f1 cf       	rjmp	.-30     	; 0x442 <__fp_splitA+0xc>
 460:	86 95       	lsr	r24
 462:	71 05       	cpc	r23, r1
 464:	61 05       	cpc	r22, r1
 466:	08 94       	sec
 468:	08 95       	ret

0000046a <__fp_zero>:
 46a:	e8 94       	clt

0000046c <__fp_szero>:
 46c:	bb 27       	eor	r27, r27
 46e:	66 27       	eor	r22, r22
 470:	77 27       	eor	r23, r23
 472:	cb 01       	movw	r24, r22
 474:	97 f9       	bld	r25, 7
 476:	08 95       	ret

00000478 <_exit>:
 478:	f8 94       	cli

0000047a <__stop_program>:
 47a:	ff cf       	rjmp	.-2      	; 0x47a <__stop_program>
