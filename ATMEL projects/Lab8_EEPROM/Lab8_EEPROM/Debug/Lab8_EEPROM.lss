
Lab8_EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000001b8  0000022c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001b8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000268  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000002a8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bc2  00000000  00000000  00000330  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009ae  00000000  00000000  00000ef2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000493  00000000  00000000  000018a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  00001d34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000509  00000000  00000000  00001dc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000096  00000000  00000000  000022d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00002367  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  10:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  14:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  18:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  1c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  20:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  24:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  28:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  2c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  30:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  34:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  38:	0c 94 9b 00 	jmp	0x136	; 0x136 <__vector_14>
  3c:	0c 94 ad 00 	jmp	0x15a	; 0x15a <__vector_15>
  40:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  44:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  48:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  4c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  50:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  54:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  58:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  5c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  60:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  64:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  68:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  6c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  70:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  74:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  78:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  7c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  80:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  84:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  88:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  8c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  90:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  94:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  98:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  9c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  ac:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  b0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e8 eb       	ldi	r30, 0xB8	; 184
  c8:	f1 e0       	ldi	r31, 0x01	; 1
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	ac 30       	cpi	r26, 0x0C	; 12
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>
  d6:	0e 94 bc 00 	call	0x178	; 0x178 <main>
  da:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <_exit>

000000de <__bad_interrupt>:
  de:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e2 <init_Timer0>:

const uint8_t LED_precentages[11] = {0, 7, 15, 23, 30, 38, 46, 53, 61, 69, 76};

void init_Timer0()
{
	TCCR0A |= (1 << WGM01) | (1 << WGM00) | (1 << COM0B1); // Set the Timer Mode to fast pwm
  e2:	84 b5       	in	r24, 0x24	; 36
  e4:	83 62       	ori	r24, 0x23	; 35
  e6:	84 bd       	out	0x24, r24	; 36
	// set pre-scaler to 1024 and start the timer to have the max be 5ms
	OCR0A = 77;//~5ms
  e8:	8d e4       	ldi	r24, 0x4D	; 77
  ea:	87 bd       	out	0x27, r24	; 39
	OCR0B = 0;
  ec:	18 bc       	out	0x28, r1	; 40
	TCCR0B |= (1 << CS02) | (1 << CS00)| (1 << WGM02);
  ee:	85 b5       	in	r24, 0x25	; 37
  f0:	8d 60       	ori	r24, 0x0D	; 13
  f2:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1 << 1)|(1 << 2); //activate interrupts when OC0B flag enabled
  f4:	ee e6       	ldi	r30, 0x6E	; 110
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	86 60       	ori	r24, 0x06	; 6
  fc:	80 83       	st	Z, r24
  fe:	08 95       	ret

00000100 <init_LED>:
}

void init_LED()
{
	DDRD |= (1 << 3);//oc0b output to led
 100:	8a b1       	in	r24, 0x0a	; 10
 102:	88 60       	ori	r24, 0x08	; 8
 104:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1 << 5);//set LED at portb5 to output
 106:	84 b1       	in	r24, 0x04	; 4
 108:	80 62       	ori	r24, 0x20	; 32
 10a:	84 b9       	out	0x04, r24	; 4
 10c:	08 95       	ret

0000010e <init_LEDPWM>:
	//PORTB |= (1 << 5); //default on LED
}

void init_LEDPWM()
{
	uint8_t LED_percent = eeprom_read_byte((uint8_t*) 46);
 10e:	8e e2       	ldi	r24, 0x2E	; 46
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 c4 00 	call	0x188	; 0x188 <eeprom_read_byte>
	if(LED_percent > 10)
 116:	8b 30       	cpi	r24, 0x0B	; 11
 118:	08 f0       	brcs	.+2      	; 0x11c <init_LEDPWM+0xe>
    {	  
	   LED_percent = 0;
 11a:	80 e0       	ldi	r24, 0x00	; 0
    }
	OCR0B = LED_precentages[LED_percent];
 11c:	e8 2f       	mov	r30, r24
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	e0 50       	subi	r30, 0x00	; 0
 122:	ff 4f       	sbci	r31, 0xFF	; 255
 124:	90 81       	ld	r25, Z
 126:	98 bd       	out	0x28, r25	; 40
	LED_percent += 1;
 128:	61 e0       	ldi	r22, 0x01	; 1
 12a:	68 0f       	add	r22, r24
	eeprom_write_byte((uint8_t*) 46, LED_percent);
 12c:	8e e2       	ldi	r24, 0x2E	; 46
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 cc 00 	call	0x198	; 0x198 <eeprom_write_byte>
 134:	08 95       	ret

00000136 <__vector_14>:
}

ISR(TIMER0_COMPA_vect)
{
 136:	1f 92       	push	r1
 138:	0f 92       	push	r0
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	0f 92       	push	r0
 13e:	11 24       	eor	r1, r1
 140:	8f 93       	push	r24
	if(OCR0B)
 142:	88 b5       	in	r24, 0x28	; 40
 144:	88 23       	and	r24, r24
 146:	19 f0       	breq	.+6      	; 0x14e <__vector_14+0x18>
		PORTB |= (1 << 5); //turn on
 148:	85 b1       	in	r24, 0x05	; 5
 14a:	80 62       	ori	r24, 0x20	; 32
 14c:	85 b9       	out	0x05, r24	; 5
}
 14e:	8f 91       	pop	r24
 150:	0f 90       	pop	r0
 152:	0f be       	out	0x3f, r0	; 63
 154:	0f 90       	pop	r0
 156:	1f 90       	pop	r1
 158:	18 95       	reti

0000015a <__vector_15>:

ISR(TIMER0_COMPB_vect)
{
 15a:	1f 92       	push	r1
 15c:	0f 92       	push	r0
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	0f 92       	push	r0
 162:	11 24       	eor	r1, r1
 164:	8f 93       	push	r24
	PORTB &= ~(1 << 5); //turn off
 166:	85 b1       	in	r24, 0x05	; 5
 168:	8f 7d       	andi	r24, 0xDF	; 223
 16a:	85 b9       	out	0x05, r24	; 5
}
 16c:	8f 91       	pop	r24
 16e:	0f 90       	pop	r0
 170:	0f be       	out	0x3f, r0	; 63
 172:	0f 90       	pop	r0
 174:	1f 90       	pop	r1
 176:	18 95       	reti

00000178 <main>:


int main(void)
{
	sei();
 178:	78 94       	sei
	init_LED();
 17a:	0e 94 80 00 	call	0x100	; 0x100 <init_LED>
	init_Timer0();
 17e:	0e 94 71 00 	call	0xe2	; 0xe2 <init_Timer0>
	init_LEDPWM();
 182:	0e 94 87 00 	call	0x10e	; 0x10e <init_LEDPWM>
 186:	ff cf       	rjmp	.-2      	; 0x186 <main+0xe>

00000188 <eeprom_read_byte>:
 188:	f9 99       	sbic	0x1f, 1	; 31
 18a:	fe cf       	rjmp	.-4      	; 0x188 <eeprom_read_byte>
 18c:	92 bd       	out	0x22, r25	; 34
 18e:	81 bd       	out	0x21, r24	; 33
 190:	f8 9a       	sbi	0x1f, 0	; 31
 192:	99 27       	eor	r25, r25
 194:	80 b5       	in	r24, 0x20	; 32
 196:	08 95       	ret

00000198 <eeprom_write_byte>:
 198:	26 2f       	mov	r18, r22

0000019a <eeprom_write_r18>:
 19a:	f9 99       	sbic	0x1f, 1	; 31
 19c:	fe cf       	rjmp	.-4      	; 0x19a <eeprom_write_r18>
 19e:	1f ba       	out	0x1f, r1	; 31
 1a0:	92 bd       	out	0x22, r25	; 34
 1a2:	81 bd       	out	0x21, r24	; 33
 1a4:	20 bd       	out	0x20, r18	; 32
 1a6:	0f b6       	in	r0, 0x3f	; 63
 1a8:	f8 94       	cli
 1aa:	fa 9a       	sbi	0x1f, 2	; 31
 1ac:	f9 9a       	sbi	0x1f, 1	; 31
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	01 96       	adiw	r24, 0x01	; 1
 1b2:	08 95       	ret

000001b4 <_exit>:
 1b4:	f8 94       	cli

000001b6 <__stop_program>:
 1b6:	ff cf       	rjmp	.-2      	; 0x1b6 <__stop_program>
